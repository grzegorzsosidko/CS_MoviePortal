// <auto-generated />
using System;
using Firma.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Firma.Data.Migrations
{
    [DbContext(typeof(FirmaContext))]
    [Migration("20250618171350_AddCmsPageEntity")]
    partial class AddCmsPageEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AktorFilm", b =>
                {
                    b.Property<int>("AktorzyIdAktor")
                        .HasColumnType("int");

                    b.Property<int>("FilmyIdFilm")
                        .HasColumnType("int");

                    b.HasKey("AktorzyIdAktor", "FilmyIdFilm");

                    b.HasIndex("FilmyIdFilm");

                    b.ToTable("AktorFilm");
                });

            modelBuilder.Entity("FilmGatunek", b =>
                {
                    b.Property<int>("FilmyIdFilm")
                        .HasColumnType("int");

                    b.Property<int>("GatunkiIdGatunek")
                        .HasColumnType("int");

                    b.HasKey("FilmyIdFilm", "GatunkiIdGatunek");

                    b.HasIndex("GatunkiIdGatunek");

                    b.ToTable("FilmGatunek");
                });

            modelBuilder.Entity("Firma.Data.Data.CMS.Strona", b =>
                {
                    b.Property<int>("IdStrony")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStrony"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdStrony");

                    b.ToTable("Strona");
                });

            modelBuilder.Entity("Firma.Data.Data.Customers.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("IdUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Aktor", b =>
                {
                    b.Property<int>("IdAktor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAktor"));

                    b.Property<DateTime?>("DataUrodzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZdjecieUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAktor");

                    b.ToTable("Aktor");
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Film", b =>
                {
                    b.Property<int>("IdFilm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFilm"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("IdReżyser")
                        .HasColumnType("int");

                    b.Property<string>("PosterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdFilm");

                    b.HasIndex("IdReżyser");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Gatunek", b =>
                {
                    b.Property<int>("IdGatunek")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGatunek"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdGatunek");

                    b.ToTable("Gatunek");
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Recenzja", b =>
                {
                    b.Property<int>("IdRecenzja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecenzja"));

                    b.Property<DateTime>("DataDodania")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFilm")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("IdRecenzja");

                    b.HasIndex("IdFilm");

                    b.HasIndex("IdUser");

                    b.ToTable("Recenzja");
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Reżyser", b =>
                {
                    b.Property<int>("IdReżyser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReżyser"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdReżyser");

                    b.ToTable("Reżyser");
                });

            modelBuilder.Entity("AktorFilm", b =>
                {
                    b.HasOne("Firma.Data.Data.Movie.Aktor", null)
                        .WithMany()
                        .HasForeignKey("AktorzyIdAktor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firma.Data.Data.Movie.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmyIdFilm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmGatunek", b =>
                {
                    b.HasOne("Firma.Data.Data.Movie.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmyIdFilm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firma.Data.Data.Movie.Gatunek", null)
                        .WithMany()
                        .HasForeignKey("GatunkiIdGatunek")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Film", b =>
                {
                    b.HasOne("Firma.Data.Data.Movie.Reżyser", "Reżyser")
                        .WithMany("Filmy")
                        .HasForeignKey("IdReżyser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reżyser");
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Recenzja", b =>
                {
                    b.HasOne("Firma.Data.Data.Movie.Film", "Film")
                        .WithMany("Recenzje")
                        .HasForeignKey("IdFilm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firma.Data.Data.Customers.User", "User")
                        .WithMany("Recenzje")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Firma.Data.Data.Customers.User", b =>
                {
                    b.Navigation("Recenzje");
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Film", b =>
                {
                    b.Navigation("Recenzje");
                });

            modelBuilder.Entity("Firma.Data.Data.Movie.Reżyser", b =>
                {
                    b.Navigation("Filmy");
                });
#pragma warning restore 612, 618
        }
    }
}
